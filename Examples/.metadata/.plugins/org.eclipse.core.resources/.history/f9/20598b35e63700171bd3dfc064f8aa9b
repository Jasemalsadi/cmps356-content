package qu.hifz.repository;

package qu.cms.repository;

import qu.cms.entity.Address;
import qu.cms.entity.Contact;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.*;

public class ContactDBRepository {

    @PersistenceContext
    EntityManager em;
    
    public List<Contact> getContacts() {
        Query q = em.createNamedQuery("Contact.getAllContact");
        return q.getResultList();
    }

    public void addContact(Contact contact) {
        em.persist(contact);
    }
    
    public void updateContact(Contact contact) {
        em.merge(contact);
    }

    public void deleteContact(int contactId) {
        em.remove(getContact(contactId));
    }
        
    public Contact getContact(int id) {
        return em.find(Contact.class, id);
    }

    public int getContactsCount() {
        return ((Long) em.createQuery("select count(c) from Contact as c").getSingleResult()).intValue();
    }

    public void insertTestData() {
        System.out.println("Creating 3 test contacts\n");

        Contact contact1 = new Contact("Samir", "Hilal");
        contact1.setAddress(new Address("22 Aspire St", "Doha", "Qatar"));

        Contact contact2 = new Contact("Mariam", "Ahmed");
        contact2.setAddress(new Address("11 Fun St", "Dubai", "United Arab Emirates"));

        Contact contact3 = new Contact("Jarir", "Bookstore");
        contact3.setAddress(new Address("33 Salman St", "Jeddah", "Saudi Arabia"));

        addContact(contact1);
        addContact(contact2);
        addContact(contact3);
    }

    public List<String> getCountries() {
        List<String> countries = new ArrayList();
        countries.add("Qatar");
        countries.add("Palestine");
        countries.add("Algeria");
        countries.add("Egypt");
        countries.add("Sudan");
        countries.add("Iraq");
        countries.add("Morocco");
        countries.add("Saudi Arabia");
        countries.add("Yemen");
        countries.add("Syria");
        countries.add("Tunisia");
        countries.add("Somalia");
        countries.add("United Arab Emirates");
        countries.add("Libya");
        countries.add("Jordan");
        countries.add("Mauritania");
        countries.add("Oman");
        countries.add("Kuwait");
        countries.add("Bahrain");

        return countries;
    }
    
    public List<String> getCities(String country) {
        try {
            Thread.sleep( 2000 );//simulate a long running action
        } catch (InterruptedException ex) {
            Logger.getLogger(ContactRepository.class.getName()).log(Level.SEVERE, "Thread sleep failed", ex);
        }
        List<String> cities = new ArrayList<>();
        switch (country)
        {
            case "Qatar" :
                cities = Arrays.asList("Doha", "Al Khor", "Al Wakrah");
                break;
            case "Palestine" :
                cities = Arrays.asList("Quds", "Gaza", "Khan Yunis");
                break;
            case "Algeria" :
                cities = Arrays.asList("Algiers", "Oran", "Constantine");
                break;
            case "Egypt" :
                cities = Arrays.asList("Cairo", "Alexandria", "Damanhur");
                break;
            case "Sudan" :
                cities = Arrays.asList("Khartoum", "Wadi Halfa", "Taiyara");
                break;
            case "Iraq" :
                cities = Arrays.asList("Baghdad", "Basra", "Faluja");
                break;
            case "Morocco" :
                cities = Arrays.asList("Fes", "Casabalanca", "Rabat");
                break;
            case "Saudi Arabia" :
                cities = Arrays.asList("Mecca", "Madina", "Jeddah");
                break;
            case "Yemen" :
                cities = Arrays.asList("Sana'a", "Aden", "Taizz");
                break;
            case "Syria" :
                cities = Arrays.asList("Damascus", "Aleppo", "Daraa");
                break;
            case "Tunisia" :
                cities = Arrays.asList("Tunis", "Sfax", "Soussa");
                break;
            case "Somalia" :
                cities = Arrays.asList("Mogadishu", "Merca", "Qandala");
                break;
            case "United Arab Emirates" :
                cities = Arrays.asList("Dubai", "Abu Dhabi", "Sharjha");
                break;
            case "Libya" :
                cities = Arrays.asList("Tripoli", "Benghazi", "Misrata");
                break;
            case "Jordan" :
                cities = Arrays.asList("Amman", "Irbid", "Al-Aqaba");
                break;
            case "Mauritania" :
                cities = Arrays.asList("Nouakchott", "Nouadhibou", "Rosso");
                break;
            case "Oman" :
                cities = Arrays.asList("Muscat", "Nizwa", "Sohar");
                break;
            case "Kuwait" :
               cities = Arrays.asList("Kuwait city", "Ahmed Al Jaber", "Al Abdaliyah");
               break;
            case "Bahrain" :
                cities = Arrays.asList("Manama", "Riffa", "Muharraq");
                break;
        }
        
        return cities;
    }
 
   
}
