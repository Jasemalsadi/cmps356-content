package qu.hifz.service;

import com.google.gson.Gson;

import qu.hifz.entity.Surah;
import qu.hifz.repository.SurahRepository;

import java.util.List;

import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;

@Path("/api/surahs")
public class SurahService {
    SurahRepository surahRepository;

    public SurahService() {
    	this.surahRepository = new SurahRepository();
    }
    
    @GET
    @Produces({MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML})
    public List<Surah> getContacts() {
        return surahRepository.getSurahs();
    }
    
    /*
    
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getSurahs() {
        Gson gson = new Gson();
        String surahs = gson.toJson(surahRepository.getSurahs());
        return Response.ok(surahs).build();
    }
    */
    @Path("/jdbc")
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getSurahsJDBC() {
        Gson gson = new Gson();
        String surahs = "";
		try {
			surahs = gson.toJson(surahRepository.getSurahsJDBC());
		} catch (Exception ex) {
			return Response.serverError().entity(ex.getMessage()).build();	
		}
        return Response.ok(surahs).build();
    }
    
    @Path("/jpa")
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getSurahsJPA() {
        Gson gson = new Gson();
        String surahs =  gson.toJson(surahRepository.getSurahsJPA());
        return Response.ok(surahs).build();
    }
}